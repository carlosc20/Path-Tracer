//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[88];
.global .align 1 .b8 $str[45] = {61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0};
.global .align 1 .b8 $str1[23] = {78, 97, 117, 32, 82, 97, 121, 45, 84, 114, 97, 99, 105, 110, 103, 32, 68, 101, 98, 117, 103, 10, 0};
.global .align 1 .b8 $str2[24] = {76, 105, 103, 104, 116, 80, 111, 115, 58, 32, 37, 102, 44, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str3[17] = {65, 116, 116, 101, 110, 117, 97, 116, 105, 111, 110, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str4[19] = {76, 97, 117, 110, 99, 104, 32, 100, 105, 109, 58, 32, 37, 117, 32, 37, 117, 10, 0};
.global .align 1 .b8 $str5[29] = {82, 97, 121, 115, 32, 112, 101, 114, 32, 112, 105, 120, 101, 108, 32, 115, 113, 117, 97, 114, 101, 100, 58, 32, 37, 100, 32, 10, 0};
.global .align 1 .b8 $str6[16] = {77, 97, 120, 32, 68, 101, 112, 116, 104, 58, 32, 37, 100, 32, 10, 0};

.visible .entry __closesthit__radiance(

)
{
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<195>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<23>;


	// inline asm
	call (%rd5), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd6, %r1;
	shl.b64 	%rd7, %rd6, 32;
	cvt.u64.u32	%rd8, %r2;
	or.b64  	%rd2, %rd7, %rd8;
	// inline asm
	call (%r3), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd9, [%rd5];
	mul.wide.s32 	%rd10, %r3, 12;
	add.s64 	%rd11, %rd9, %rd10;
	ld.u32 	%r4, [%rd11];
	ld.u32 	%r5, [%rd11+4];
	ld.u32 	%r6, [%rd11+8];
	// inline asm
	call (%f15, %f16), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f24, 0f3F800000;
	sub.ftz.f32 	%f25, %f24, %f15;
	sub.ftz.f32 	%f26, %f25, %f16;
	ld.u64 	%rd12, [%rd5+16];
	mul.wide.u32 	%rd13, %r4, 16;
	add.s64 	%rd14, %rd12, %rd13;
	ld.v4.f32 	{%f27, %f28, %f29, %f30}, [%rd14];
	mul.wide.u32 	%rd15, %r5, 16;
	add.s64 	%rd16, %rd12, %rd15;
	ld.v4.f32 	{%f34, %f35, %f36, %f37}, [%rd16];
	mul.ftz.f32 	%f41, %f15, %f34;
	mul.ftz.f32 	%f42, %f15, %f35;
	mul.ftz.f32 	%f43, %f15, %f36;
	fma.rn.ftz.f32 	%f44, %f27, %f26, %f41;
	fma.rn.ftz.f32 	%f45, %f28, %f26, %f42;
	fma.rn.ftz.f32 	%f46, %f29, %f26, %f43;
	mul.wide.u32 	%rd17, %r6, 16;
	add.s64 	%rd18, %rd12, %rd17;
	ld.v4.f32 	{%f47, %f48, %f49, %f50}, [%rd18];
	fma.rn.ftz.f32 	%f54, %f16, %f47, %f44;
	fma.rn.ftz.f32 	%f55, %f16, %f48, %f45;
	fma.rn.ftz.f32 	%f56, %f16, %f49, %f46;
	mul.ftz.f32 	%f57, %f55, %f55;
	fma.rn.ftz.f32 	%f58, %f54, %f54, %f57;
	fma.rn.ftz.f32 	%f59, %f56, %f56, %f58;
	rsqrt.approx.ftz.f32 	%f60, %f59;
	mul.ftz.f32 	%f1, %f54, %f60;
	mul.ftz.f32 	%f2, %f55, %f60;
	mul.ftz.f32 	%f3, %f56, %f60;
	// inline asm
	call (%f17), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f18), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f19), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f20), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f21), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f22), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f23), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f4, %f17, %f23, %f20;
	fma.rn.ftz.f32 	%f5, %f18, %f23, %f21;
	fma.rn.ftz.f32 	%f6, %f19, %f23, %f22;
	add.s64 	%rd3, %rd2, 68;
	ld.u32 	%r7, [%rd2+68];
	setp.eq.s32	%p1, %r7, 0;
	@%p1 bra 	BB0_2;

	ld.v2.f32 	{%f61, %f62}, [%rd5+88];
	ld.f32 	%f65, [%rd5+96];
	st.f32 	[%rd2], %f61;
	st.f32 	[%rd2+4], %f62;
	st.f32 	[%rd2+8], %f65;
	bra.uni 	BB0_3;

BB0_2:
	mov.u64 	%rd19, 0;
	st.u32 	[%rd2+4], %rd19;
	st.u32 	[%rd2], %rd19;
	mov.u32 	%r8, 0;
	st.u32 	[%rd2+8], %r8;

BB0_3:
	ld.u32 	%r9, [%rd2+64];
	mad.lo.s32 	%r10, %r9, 1664525, 1013904223;
	and.b32  	%r11, %r10, 16777215;
	cvt.rn.f32.u32	%f67, %r11;
	mov.f32 	%f68, 0f4B800000;
	div.approx.ftz.f32 	%f69, %f67, %f68;
	mad.lo.s32 	%r12, %r10, 1664525, 1013904223;
	and.b32  	%r13, %r12, 16777215;
	cvt.rn.f32.u32	%f70, %r13;
	div.approx.ftz.f32 	%f71, %f70, %f68;
	sqrt.approx.ftz.f32 	%f72, %f69;
	mul.ftz.f32 	%f73, %f71, 0f40C90FDB;
	cos.approx.ftz.f32 	%f74, %f73;
	mul.ftz.f32 	%f75, %f72, %f74;
	sin.approx.ftz.f32 	%f76, %f73;
	mul.ftz.f32 	%f77, %f72, %f76;
	mul.ftz.f32 	%f78, %f77, %f77;
	sub.ftz.f32 	%f80, %f24, %f78;
	mul.ftz.f32 	%f81, %f75, %f75;
	sub.ftz.f32 	%f82, %f80, %f81;
	mov.f32 	%f194, 0f00000000;
	max.ftz.f32 	%f83, %f194, %f82;
	sqrt.approx.ftz.f32 	%f84, %f83;
	abs.ftz.f32 	%f85, %f3;
	abs.ftz.f32 	%f86, %f1;
	setp.gt.ftz.f32	%p2, %f86, %f85;
	neg.ftz.f32 	%f87, %f2;
	selp.f32	%f88, %f87, 0f00000000, %p2;
	neg.ftz.f32 	%f89, %f3;
	selp.f32	%f90, %f1, %f89, %p2;
	selp.f32	%f91, 0f00000000, %f2, %p2;
	mul.ftz.f32 	%f92, %f90, %f90;
	fma.rn.ftz.f32 	%f93, %f88, %f88, %f92;
	fma.rn.ftz.f32 	%f94, %f91, %f91, %f93;
	rsqrt.approx.ftz.f32 	%f95, %f94;
	mul.ftz.f32 	%f96, %f88, %f95;
	mul.ftz.f32 	%f97, %f90, %f95;
	mul.ftz.f32 	%f98, %f91, %f95;
	mul.ftz.f32 	%f99, %f3, %f97;
	mul.ftz.f32 	%f100, %f2, %f98;
	sub.ftz.f32 	%f101, %f99, %f100;
	mul.ftz.f32 	%f102, %f1, %f98;
	mul.ftz.f32 	%f103, %f3, %f96;
	sub.ftz.f32 	%f104, %f102, %f103;
	mul.ftz.f32 	%f105, %f2, %f96;
	mul.ftz.f32 	%f106, %f1, %f97;
	sub.ftz.f32 	%f107, %f105, %f106;
	mul.ftz.f32 	%f108, %f104, %f104;
	fma.rn.ftz.f32 	%f109, %f101, %f101, %f108;
	fma.rn.ftz.f32 	%f110, %f107, %f107, %f109;
	rsqrt.approx.ftz.f32 	%f111, %f110;
	mul.ftz.f32 	%f112, %f111, %f101;
	mul.ftz.f32 	%f113, %f111, %f104;
	mul.ftz.f32 	%f114, %f111, %f107;
	mul.ftz.f32 	%f115, %f75, %f112;
	mul.ftz.f32 	%f116, %f75, %f113;
	mul.ftz.f32 	%f117, %f75, %f114;
	fma.rn.ftz.f32 	%f118, %f77, %f96, %f115;
	fma.rn.ftz.f32 	%f119, %f77, %f97, %f116;
	fma.rn.ftz.f32 	%f120, %f77, %f98, %f117;
	fma.rn.ftz.f32 	%f121, %f1, %f84, %f118;
	fma.rn.ftz.f32 	%f122, %f2, %f84, %f119;
	fma.rn.ftz.f32 	%f123, %f3, %f84, %f120;
	ld.f32 	%f124, [%rd2+24];
	ld.f32 	%f125, [%rd2+28];
	ld.f32 	%f126, [%rd2+32];
	st.f32 	[%rd2+48], %f121;
	st.f32 	[%rd2+52], %f122;
	st.f32 	[%rd2+56], %f123;
	st.f32 	[%rd2+36], %f4;
	st.f32 	[%rd2+40], %f5;
	st.f32 	[%rd2+44], %f6;
	ld.v2.f32 	{%f127, %f128}, [%rd5+64];
	mov.u32 	%r14, 0;
	mul.ftz.f32 	%f131, %f127, 0f3EA2F983;
	mul.ftz.f32 	%f132, %f128, 0f3EA2F983;
	ld.f32 	%f133, [%rd5+72];
	mul.ftz.f32 	%f134, %f133, 0f3EA2F983;
	mul.ftz.f32 	%f135, %f131, %f124;
	st.f32 	[%rd2+24], %f135;
	mul.ftz.f32 	%f136, %f132, %f125;
	st.f32 	[%rd2+28], %f136;
	mul.ftz.f32 	%f137, %f134, %f126;
	st.f32 	[%rd2+32], %f137;
	mad.lo.s32 	%r15, %r12, 1664525, 1013904223;
	mad.lo.s32 	%r16, %r15, 1664525, 1013904223;
	st.u32 	[%rd2+64], %r16;
	st.u32 	[%rd3], %r14;
	and.b32  	%r17, %r15, 16777215;
	cvt.rn.f32.u32	%f138, %r17;
	div.approx.ftz.f32 	%f139, %f138, %f68;
	and.b32  	%r18, %r16, 16777215;
	cvt.rn.f32.u32	%f140, %r18;
	div.approx.ftz.f32 	%f141, %f140, %f68;
	ld.const.u64 	%rd4, [optixLaunchParams+80];
	cvta.to.global.u64 	%rd20, %rd4;
	ld.global.v4.f32 	{%f142, %f143, %f144, %f145}, [%rd20];
	fma.rn.ftz.f32 	%f149, %f139, 0f3EF0A3D7, %f142;
	fma.rn.ftz.f32 	%f150, %f139, 0f00000000, %f143;
	fma.rn.ftz.f32 	%f151, %f139, 0f00000000, %f144;
	fma.rn.ftz.f32 	%f152, %f141, 0f00000000, %f149;
	fma.rn.ftz.f32 	%f153, %f141, 0f00000000, %f150;
	fma.rn.ftz.f32 	%f154, %f141, 0f3EC28F5C, %f151;
	sub.ftz.f32 	%f155, %f152, %f4;
	sub.ftz.f32 	%f156, %f153, %f5;
	sub.ftz.f32 	%f157, %f154, %f6;
	mul.ftz.f32 	%f158, %f156, %f156;
	fma.rn.ftz.f32 	%f159, %f155, %f155, %f158;
	fma.rn.ftz.f32 	%f160, %f157, %f157, %f159;
	sqrt.approx.ftz.f32 	%f7, %f160;
	rsqrt.approx.ftz.f32 	%f161, %f160;
	mul.ftz.f32 	%f8, %f155, %f161;
	mul.ftz.f32 	%f9, %f156, %f161;
	mul.ftz.f32 	%f10, %f161, %f157;
	mul.ftz.f32 	%f162, %f2, %f9;
	fma.rn.ftz.f32 	%f163, %f1, %f8, %f162;
	fma.rn.ftz.f32 	%f11, %f3, %f10, %f163;
	neg.ftz.f32 	%f164, %f9;
	fma.rn.ftz.f32 	%f165, %f8, 0f00000000, %f164;
	fma.rn.ftz.f32 	%f12, %f10, 0f00000000, %f165;
	setp.leu.ftz.f32	%p3, %f11, 0f00000000;
	setp.geu.ftz.f32	%p4, %f12, 0f80000000;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_6;

	ld.const.u64 	%rd21, [optixLaunchParams+72];
	add.ftz.f32 	%f173, %f7, 0fBC23D70A;
	mov.u32 	%r21, 4;
	mov.u32 	%r23, 2;
	mov.u32 	%r24, 1;
	mov.f32 	%f172, 0f3A83126F;
	mov.f32 	%f194, 0f00000000;
	// inline asm
	call (%r19), _optix_trace_1, (%rd21, %f4, %f5, %f6, %f8, %f9, %f10, %f172, %f173, %f194, %r24, %r21, %r24, %r23, %r24, %r14);
	// inline asm
	setp.ne.s32	%p6, %r19, 0;
	@%p6 bra 	BB0_6;

	ld.global.u8 	%rs1, [%rd20+28];
	setp.eq.s16	%p7, %rs1, 0;
	mul.ftz.f32 	%f176, %f7, %f7;
	selp.f32	%f177, 0f3F800000, %f176, %p7;
	mul.ftz.f32 	%f178, %f12, %f11;
	mov.f32 	%f179, 0f00000000;
	sub.ftz.f32 	%f180, %f179, 0f00000000;
	sub.ftz.f32 	%f181, %f179, 0f3E36E2EB;
	mul.ftz.f32 	%f182, %f181, %f181;
	fma.rn.ftz.f32 	%f183, %f180, %f180, %f182;
	fma.rn.ftz.f32 	%f184, %f180, %f180, %f183;
	sqrt.approx.ftz.f32 	%f185, %f184;
	mul.ftz.f32 	%f186, %f178, %f185;
	mul.ftz.f32 	%f187, %f186, 0fC0000000;
	div.approx.ftz.f32 	%f194, %f187, %f177;

BB0_6:
	ld.f32 	%f188, [%rd2+12];
	fma.rn.ftz.f32 	%f189, %f194, 0f41700000, %f188;
	ld.f32 	%f190, [%rd2+16];
	ld.f32 	%f191, [%rd2+20];
	st.f32 	[%rd2+12], %f189;
	fma.rn.ftz.f32 	%f192, %f194, 0f41700000, %f190;
	st.f32 	[%rd2+16], %f192;
	fma.rn.ftz.f32 	%f193, %f194, 0f40A00000, %f191;
	st.f32 	[%rd2+20], %f193;
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+12], %r3;
	st.u32 	[%rd4+16], %r3;
	st.u32 	[%rd4+20], %r3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd4+60], %rs1;
	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 1;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 0;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 16 .b8 	__local_depot6[112];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<167>;
	.reg .b32 	%r<155>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<35>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd1, %SPL, 32;
	// inline asm
	call (%r30), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r31), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u64 	%rd2, [optixLaunchParams+80];
	ld.const.u32 	%r3, [optixLaunchParams+16];
	cvt.rn.f32.s32	%f1, %r3;
	// inline asm
	call (%r33), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r34), _optix_get_launch_dimension_y, ();
	// inline asm
	ld.const.u32 	%r6, [optixLaunchParams];
	mov.f32 	%f152, 0f00000000;
	setp.leu.ftz.f32	%p1, %f1, 0f00000000;
	mov.f32 	%f153, %f152;
	mov.f32 	%f154, %f152;
	@%p1 bra 	BB6_8;

	rcp.approx.ftz.f32 	%f2, %f1;
	add.s32 	%r37, %r6, -1640531527;
	shl.b32 	%r38, %r6, 4;
	add.s32 	%r39, %r38, -1556008596;
	xor.b32  	%r40, %r39, %r37;
	shr.u32 	%r41, %r6, 5;
	add.s32 	%r42, %r41, -939442524;
	xor.b32  	%r43, %r40, %r42;
	mad.lo.s32 	%r44, %r33, %r30, %r31;
	add.s32 	%r45, %r44, %r43;
	shr.u32 	%r46, %r45, 5;
	add.s32 	%r47, %r46, 2123724318;
	add.s32 	%r48, %r45, -1640531527;
	shl.b32 	%r49, %r45, 4;
	add.s32 	%r50, %r49, -1383041155;
	xor.b32  	%r51, %r50, %r48;
	xor.b32  	%r52, %r51, %r47;
	add.s32 	%r53, %r52, %r6;
	add.s32 	%r54, %r53, 1013904242;
	shl.b32 	%r55, %r53, 4;
	add.s32 	%r56, %r55, -1556008596;
	xor.b32  	%r57, %r56, %r54;
	shr.u32 	%r58, %r53, 5;
	add.s32 	%r59, %r58, -939442524;
	xor.b32  	%r60, %r57, %r59;
	add.s32 	%r61, %r60, %r45;
	shr.u32 	%r62, %r61, 5;
	add.s32 	%r63, %r62, 2123724318;
	add.s32 	%r64, %r61, 1013904242;
	shl.b32 	%r65, %r61, 4;
	add.s32 	%r66, %r65, -1383041155;
	xor.b32  	%r67, %r66, %r64;
	xor.b32  	%r68, %r67, %r63;
	add.s32 	%r69, %r68, %r53;
	add.s32 	%r70, %r69, -626627285;
	shl.b32 	%r71, %r69, 4;
	add.s32 	%r72, %r71, -1556008596;
	xor.b32  	%r73, %r72, %r70;
	shr.u32 	%r74, %r69, 5;
	add.s32 	%r75, %r74, -939442524;
	xor.b32  	%r76, %r73, %r75;
	add.s32 	%r77, %r76, %r61;
	shr.u32 	%r78, %r77, 5;
	add.s32 	%r79, %r78, 2123724318;
	add.s32 	%r80, %r77, -626627285;
	shl.b32 	%r81, %r77, 4;
	add.s32 	%r82, %r81, -1383041155;
	xor.b32  	%r83, %r82, %r80;
	xor.b32  	%r84, %r83, %r79;
	add.s32 	%r85, %r84, %r69;
	cvt.rn.f32.s32	%f3, %r30;
	cvt.rn.f32.s32	%f4, %r31;
	cvt.rn.f32.u32	%f5, %r33;
	cvt.rn.f32.u32	%f6, %r34;
	ld.const.v2.f32 	{%f65, %f66}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f67, %f68}, [optixLaunchParams+56];
	ld.const.f32 	%f11, [optixLaunchParams+36];
	ld.const.v2.f32 	{%f69, %f70}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f71, %f72}, [optixLaunchParams+64];
	ld.const.u64 	%rd4, [optixLaunchParams+72];
	add.s32 	%r86, %r85, 2027808484;
	shl.b32 	%r87, %r85, 4;
	add.s32 	%r88, %r87, -1556008596;
	xor.b32  	%r89, %r88, %r86;
	shr.u32 	%r90, %r85, 5;
	add.s32 	%r91, %r90, -939442524;
	xor.b32  	%r92, %r89, %r91;
	add.s32 	%r149, %r92, %r77;
	mov.f32 	%f64, 0f00000000;
	mov.u32 	%r36, 0;
	mov.f32 	%f144, %f64;
	mov.u32 	%r145, %r36;
	mov.f32 	%f152, %f64;
	mov.f32 	%f153, %f64;
	mov.f32 	%f154, %f64;

BB6_2:
	ld.const.v2.f32 	{%f74, %f75}, [optixLaunchParams+24];
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.u32 	%r154, [%rd6+16];
	mov.f32 	%f148, %f64;
	mov.u32 	%r148, %r36;

BB6_3:
	add.u64 	%rd34, %SP, 32;
	ld.const.f32 	%f155, [optixLaunchParams+32];
	mad.lo.s32 	%r95, %r149, 1664525, 1013904223;
	and.b32  	%r96, %r95, 16777215;
	cvt.rn.f32.u32	%f76, %r96;
	mov.f32 	%f77, 0f4B800000;
	div.approx.ftz.f32 	%f78, %f76, %f77;
	add.ftz.f32 	%f79, %f144, %f78;
	mad.lo.s32 	%r149, %r95, 1664525, 1013904223;
	and.b32  	%r97, %r149, 16777215;
	cvt.rn.f32.u32	%f80, %r97;
	div.approx.ftz.f32 	%f81, %f80, %f77;
	add.ftz.f32 	%f82, %f148, %f81;
	fma.rn.ftz.f32 	%f83, %f2, %f79, %f3;
	fma.rn.ftz.f32 	%f84, %f2, %f82, %f4;
	div.approx.ftz.f32 	%f85, %f83, %f5;
	div.approx.ftz.f32 	%f86, %f84, %f6;
	fma.rn.ftz.f32 	%f87, %f85, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f88, %f86, 0f40000000, 0fBF800000;
	mov.u32 	%r98, 1;
	fma.rn.ftz.f32 	%f89, %f87, %f65, %f11;
	fma.rn.ftz.f32 	%f90, %f87, %f66, %f69;
	fma.rn.ftz.f32 	%f91, %f87, %f67, %f70;
	fma.rn.ftz.f32 	%f92, %f88, %f68, %f89;
	fma.rn.ftz.f32 	%f93, %f88, %f71, %f90;
	fma.rn.ftz.f32 	%f94, %f88, %f72, %f91;
	mul.ftz.f32 	%f95, %f93, %f93;
	fma.rn.ftz.f32 	%f96, %f92, %f92, %f95;
	fma.rn.ftz.f32 	%f97, %f94, %f94, %f96;
	rsqrt.approx.ftz.f32 	%f98, %f97;
	mul.ftz.f32 	%f160, %f92, %f98;
	mul.ftz.f32 	%f159, %f93, %f98;
	mul.ftz.f32 	%f158, %f94, %f98;
	st.local.u32 	[%rd1], %r36;
	st.local.u32 	[%rd1+4], %r36;
	st.local.u32 	[%rd1+8], %r36;
	st.local.u32 	[%rd1+12], %r36;
	st.local.u32 	[%rd1+16], %r36;
	st.local.u32 	[%rd1+20], %r36;
	mov.u32 	%r99, 1065353216;
	st.local.u32 	[%rd1+24], %r99;
	st.local.u32 	[%rd1+28], %r99;
	st.local.u32 	[%rd1+32], %r99;
	st.local.u32 	[%rd1+68], %r98;
	mov.u16 	%rs5, 0;
	st.local.u32 	[%rd1+64], %r149;
	st.local.u8 	[%rd1+60], %rs5;
	shr.u64 	%rd7, %rd34, 32;
	cvt.u32.u64	%r152, %rd7;
	cvt.u32.u64	%r153, %rd34;
	setp.lt.s32	%p2, %r154, 1;
	mov.u32 	%r151, %r36;
	mov.f32 	%f156, %f75;
	mov.f32 	%f157, %f74;
	@%p2 bra 	BB6_6;
	bra.uni 	BB6_4;

BB6_11:
	ld.local.f32 	%f160, [%rd1+48];
	ld.local.f32 	%f159, [%rd1+52];
	ld.local.f32 	%f158, [%rd1+56];
	ld.local.f32 	%f157, [%rd1+36];
	ld.local.f32 	%f156, [%rd1+40];
	ld.local.f32 	%f155, [%rd1+44];
	ld.local.u8 	%rs5, [%rd1+60];

BB6_4:
	and.b16  	%rs4, %rs5, 255;
	setp.ne.s16	%p3, %rs4, 0;
	@%p3 bra 	BB6_6;

	cvta.to.global.u64 	%rd33, %rd2;
	mov.u32 	%r144, 1;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 0;
	mov.f32 	%f105, 0f3A83126F;
	mov.f32 	%f106, 0f60AD78EC;
	mov.f32 	%f107, 0f00000000;
	// inline asm
	call (%r152, %r153), _optix_trace_2, (%rd4, %f157, %f156, %f155, %f160, %f159, %f158, %f105, %f106, %f107, %r144, %r106, %r106, %r105, %r106, %r152, %r153);
	// inline asm
	ld.local.f32 	%f108, [%rd1];
	add.ftz.f32 	%f109, %f154, %f108;
	ld.local.f32 	%f110, [%rd1+4];
	add.ftz.f32 	%f111, %f153, %f110;
	ld.local.f32 	%f112, [%rd1+8];
	add.ftz.f32 	%f113, %f152, %f112;
	ld.local.f32 	%f114, [%rd1+24];
	ld.local.f32 	%f115, [%rd1+12];
	ld.local.f32 	%f116, [%rd1+28];
	ld.local.f32 	%f117, [%rd1+16];
	ld.local.f32 	%f118, [%rd1+32];
	ld.local.f32 	%f119, [%rd1+20];
	fma.rn.ftz.f32 	%f154, %f115, %f114, %f109;
	fma.rn.ftz.f32 	%f153, %f117, %f116, %f111;
	fma.rn.ftz.f32 	%f152, %f119, %f118, %f113;
	ld.global.u32 	%r154, [%rd33+16];
	add.s32 	%r151, %r151, 1;
	setp.lt.s32	%p4, %r151, %r154;
	@%p4 bra 	BB6_11;

BB6_6:
	add.s32 	%r148, %r148, 1;
	cvt.rn.f32.s32	%f148, %r148;
	setp.lt.ftz.f32	%p5, %f148, %f1;
	@%p5 bra 	BB6_3;

	add.s32 	%r145, %r145, 1;
	cvt.rn.f32.s32	%f144, %r145;
	setp.lt.ftz.f32	%p6, %f144, %f1;
	@%p6 bra 	BB6_2;

BB6_8:
	ld.const.u32 	%r142, [optixLaunchParams];
	mul.ftz.f32 	%f120, %f1, %f1;
	rcp.approx.ftz.f32 	%f121, %f120;
	mul.ftz.f32 	%f122, %f154, %f121;
	mul.ftz.f32 	%f123, %f153, %f121;
	mul.ftz.f32 	%f124, %f152, %f121;
	cvta.to.global.u64 	%rd10, %rd2;
	ld.global.f32 	%f125, [%rd10+24];
	rcp.approx.ftz.f32 	%f126, %f125;
	lg2.approx.ftz.f32 	%f127, %f122;
	mul.ftz.f32 	%f128, %f126, %f127;
	ex2.approx.ftz.f32 	%f129, %f128;
	mul.ftz.f32 	%f130, %f129, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r109, %f130;
	mov.u32 	%r110, 255;
	min.s32 	%r111, %r109, %r110;
	lg2.approx.ftz.f32 	%f131, %f123;
	mul.ftz.f32 	%f132, %f126, %f131;
	ex2.approx.ftz.f32 	%f133, %f132;
	mul.ftz.f32 	%f134, %f133, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r112, %f134;
	min.s32 	%r113, %r112, %r110;
	lg2.approx.ftz.f32 	%f135, %f124;
	mul.ftz.f32 	%f136, %f126, %f135;
	ex2.approx.ftz.f32 	%f137, %f136;
	mul.ftz.f32 	%f138, %f137, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r114, %f138;
	min.s32 	%r115, %r114, %r110;
	shl.b32 	%r116, %r113, 8;
	shl.b32 	%r117, %r115, 16;
	or.b32  	%r118, %r111, %r116;
	or.b32  	%r119, %r118, %r117;
	or.b32  	%r120, %r119, -16777216;
	mad.lo.s32 	%r121, %r33, %r31, %r30;
	ld.const.u64 	%rd11, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd12, %rd11;
	mul.wide.u32 	%rd13, %r121, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.u32 	[%rd14], %r120;
	or.b32  	%r122, %r31, %r30;
	or.b32  	%r123, %r122, %r142;
	setp.ne.s32	%p7, %r123, 0;
	@%p7 bra 	BB6_10;

	ld.const.u32 	%r143, [optixLaunchParams+16];
	mov.u64 	%rd15, $str;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, 0;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r124, [retval0+0];
	
	//{
	}// Callseq End 0
	mov.u64 	%rd18, $str1;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r125, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.global.v4.u32 	{%r126, %r127, %r128, %r129}, [%rd10];
	mov.b32 	 %f139, %r126;
	mov.b32 	 %f140, %r127;
	mov.b32 	 %f141, %r128;
	mov.b32 	 %f142, %r129;
	cvt.ftz.f64.f32	%fd1, %f140;
	cvt.ftz.f64.f32	%fd2, %f139;
	add.u64 	%rd21, %SP, 0;
	add.u64 	%rd22, %SPL, 0;
	st.local.v2.f64 	[%rd22], {%fd2, %fd1};
	cvt.ftz.f64.f32	%fd3, %f142;
	cvt.ftz.f64.f32	%fd4, %f141;
	st.local.v2.f64 	[%rd22+16], {%fd4, %fd3};
	mov.u64 	%rd23, $str2;
	cvta.global.u64 	%rd24, %rd23;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r134, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.global.s8 	%r135, [%rd10+28];
	st.local.u32 	[%rd22], %r135;
	mov.u64 	%rd25, $str3;
	cvta.global.u64 	%rd26, %rd25;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r136, [retval0+0];
	
	//{
	}// Callseq End 3
	st.local.v2.u32 	[%rd22], {%r33, %r34};
	mov.u64 	%rd27, $str4;
	cvta.global.u64 	%rd28, %rd27;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r137, [retval0+0];
	
	//{
	}// Callseq End 4
	st.local.u32 	[%rd22], %r143;
	mov.u64 	%rd29, $str5;
	cvta.global.u64 	%rd30, %rd29;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r138, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.global.u32 	%r139, [%rd10+16];
	st.local.u32 	[%rd22], %r139;
	mov.u64 	%rd31, $str6;
	cvta.global.u64 	%rd32, %rd31;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r140, [retval0+0];
	
	//{
	}// Callseq End 6
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r141, [retval0+0];
	
	//{
	}// Callseq End 7

BB6_10:
	ret;
}


